version: '2'

services:
  mongo:
    image: mongo:3.4.23
    container_name: microcks-db
    volumes:
      - "~/tmp/microcks-data:/data/db"

  postman:
    image: quay.io/microcks/microcks-postman-runtime:latest
    container_name: microcks-postman-runtime

  # kafka:
  #   image: vectorized/redpanda:v22.2.2
  #   container_name: microcks-kafka
  #   command: [
  #     "redpanda", "start",
  #     "--overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false",
  #     "--kafka-addr PLAINTEXT://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092",
  #     "--advertise-kafka-addr PLAINTEXT://kafka:19092,EXTERNAL://localhost:9092"
  #   ]
  #   ports:
  #     - "9092:9092"
  #     - "19092:19092"

  zookeeper:
    image: quay.io/strimzi/kafka:0.30.0-kafka-3.1.0
    container_name: microcks-zookeeper
    command: [
      "sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    depends_on:
      - zookeeper
    image: quay.io/strimzi/kafka:0.30.0-kafka-3.1.0
    container_name: microcks-kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181


  app:
    depends_on:
      - mongo
      - postman
    image: quay.io/microcks/microcks:1.7.1
    container_name: microcks
    volumes:
      - "./config:/deployments/config"
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017
      - SPRING_DATA_MONGODB_DATABASE=microcks
      - POSTMAN_RUNNER_URL=http://postman:3000
      - TEST_CALLBACK_URL=http://microcks:8080
      - SERVICES_UPDATE_INTERVAL=0 0 0/2 * * *
      - KEYCLOAK_ENABLED=false
      #- MAX_UPLOAD_FILE_SIZE=3MB
      - ASYNC_MINION_URL=http://microcks-async-minion:8081
      - KAFKA_BOOTSTRAP_SERVER=kafka:19092

  async-minion:
    depends_on:
      - app
    ports:
      - "8081:8081"
    image: quay.io/microcks/microcks-async-minion:1.7.1
    container_name: microcks-async-minion
    restart: on-failure
    volumes:
      - "./config:/deployments/config"
    environment:
      - QUARKUS_PROFILE=docker-compose

  importer:
    depends_on:
      - app  
    restart: on-failure
    image: quay.io/microcks/microcks-cli:latest
    volumes:
      - "./api:/specs"
    entrypoint:
      - microcks-cli
      - import
      - '/specs/openapi.yaml:true'
      - --insecure
      - --microcksURL=http://app:8080/api
      - --keycloakClientId=foo
      - --keycloakClientSecret=bar